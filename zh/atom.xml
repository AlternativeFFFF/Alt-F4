<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title>Alternative Friday Factorio Fan Facts</title>
  <link href="https://alt-f4.blog/zh/atom.xml" rel="self" />
  <id>https://alt-f4.blog</id>
  <updated>2021-06-11T08:58:24+00:00</updated>
  <author>
    <name>Therenas</name>
    <uri>https://alt-f4.blog/about</uri>
    <email>AlternativeFridayFacts@gmail.com</email>
  </author>
  
  
  <entry>
    <title>Alt-F4 #39 - JOSEF</title>
    <link href="https://alt-f4.blog/zh/ALTF4-39/" />
    <id>https://alt-f4.blog/ALTF4-39</id>
    <updated>2021-06-11T00:00:00+00:00</updated>
    <content type="html">&lt;p&gt;在本周可以被 13 整除（速算一下）的 Alt-F4 第 39 期中，&lt;em&gt;Drogiwan Cannobi&lt;/em&gt; 为本项目作出了首次供稿，他详细介绍了他的鲁布·戈德堡式的自扩张工厂的背景及其内部原理，该工厂被亲切地命名为 JOSEF。这是一个非常酷的概念，若你深入了解其细节甚至会发现它没有那么复杂。&lt;/p&gt; &lt;h2 id=&quot;josef-的有机自扩张工厂josefs-organically-self-expanding-factoryjosef-drogiwan-cannobi&quot;&gt;JOSEF 的有机自扩张工厂（JOSEF’s Organically Self-Expanding Factory，JOSEF） &lt;author&gt;Drogiwan Cannobi&lt;/author&gt;&lt;/h2&gt; &lt;p&gt; &lt;figure&gt; &lt;video class=&quot;media&quot; width=&quot;100%&quot; height=&quot;100%&quot; style=&quot;max-width: 530px; max-height: &quot; playsinline=&quot;&quot; autoplay=&quot;&quot; muted=&quot;&quot; loop=&quot;&quot; controls=&quot;&quot;&gt; &lt;source src=&quot;https://media.alt-f4.blog/ALTF4/39/start.mp4&quot; type=&quot;video/mp4&quot; /&gt; &amp;lt;/source&amp;gt; &lt;!-- &lt;source src=&quot;movie.ogg&quot; type=&quot;video/webm&quot;&gt; --&gt; &lt;!-- &lt;source src=&quot;movie.ogg&quot; type=&quot;video/ogg&quot;&gt; --&gt; 工作中的 JOSEF...</content>
  </entry>
  
  
  
  <entry>
    <title>Alt-F4 #38 - FacSTEMrio</title>
    <link href="https://alt-f4.blog/zh/ALTF4-38/" />
    <id>https://alt-f4.blog/ALTF4-38</id>
    <updated>2021-06-04T00:00:00+00:00</updated>
    <content type="html">&lt;p&gt;本周，我们的内部技术编辑决定再写一篇文章。我们对此并不确定，但没人能阻止他。因此，为您呈现：&lt;em&gt;Conor_&lt;/em&gt; 所著关于异星工厂亲和力与 STEM 领域之间的关系。是时候戴上你的毕业帽了！&lt;/p&gt; &lt;h2 id=&quot;异星工厂和-stem-conor_&quot;&gt;异星工厂和 STEM &lt;author&gt;Conor_&lt;/author&gt;&lt;/h2&gt; &lt;p&gt;在我的 &lt;em&gt;青春年华&lt;/em&gt; 中正经玩的第一款游戏是我的世界。是的，我知道，我知道，我年纪太小了。在原版我的世界中玩了一段时间后，我对缺乏明确的目标和相当有限的物品种类感到厌烦。我渴望更多的复杂性，以及更广泛的可能性。&lt;strong&gt;输入：Mod&lt;/strong&gt;。加了 Mod 的我的世界就此接管了我的生活。让我好好玩了一两年的的选择是&lt;a href=&quot;https://atlauncher.com/pack/skyfactory&quot;&gt;天空工厂 2（Sky Factory 2）&lt;/a&gt;；我也有尝试其他 Mod，但天空工厂设法保持了我的注意力。即使是现在，我偶尔也会回去，启动我的世界 1.7.10，再玩一遍这个 Mod。对于任何没有玩过天空工厂 Mod 包的人来说，它基本上是一个传统的空岛生存加上 Mod，允许你从泥土，砾石，沙子等提取资源（如矿石或种子）。最重要的是，这个过程是可以自动化的。&lt;/p&gt; &lt;p&gt;&lt;/p&gt; &lt;p&gt;&lt;!-- Spacing --&gt;&lt;/p&gt; &lt;div class=&quot;image&quot;&gt; &lt;figure&gt; &lt;img src=&quot;https://media.alt-f4.blog/ALTF4/38/sky_factory.jpg&quot; alt=&quot;天空工厂自动过筛+处理设置&quot; style=&quot;max-width: ; max-height: &quot; /&gt; &lt;figcaption&gt;自动开采鹅卵石并将其被粉碎成砾石，再将其筛选和冶炼成珍贵的矿石。&lt;/figcaption&gt; &lt;/figure&gt; &lt;/div&gt; &lt;p&gt;&lt;/p&gt; &lt;p&gt;&lt;!-- Spacing --&gt;&lt;/p&gt; &lt;p&gt;我可以制作一个替我工作的东西，这个想法超棒的。任何玩过异星工厂的人当然会认识到这个想法是游戏中的关键目标——&lt;strong&gt;自动化 &lt;em&gt;一切&lt;/em&gt;&lt;/strong&gt;。在天空工厂上花了太多、太多时间之后，我把视野扩大到其他游戏，但发现我的朋友们喜欢的游戏类型（主要是 FPS 游戏）并不是我的菜。在遥远的雾气中，异星工厂向我招手，我立马买了这个游戏，并为它提供的可能性而感到兴奋。&lt;/p&gt; &lt;p&gt;不幸的是，在我深入异星工厂的旅程中，并不全是阳光和玫瑰。正如常见的那样，我兴高采烈地进入游戏，制作并自动化了红色和绿色科研包，然后就燃尽了。回想起来，我被制作蓝色科研包所需的大量组件和步骤所淹没（那时的蓝色科研包甚至更加复杂），在异星工厂中如果你不准备分解问题并理解每个组件的话这将是个非常常见的状况。可怜的异星工厂在我尝试其他游戏的时候被搁置在一边，交不到一个朋友。&lt;/p&gt;...</content>
  </entry>
  
  
  
  <entry>
    <title>Alt-F4 #37 - 运算器速成班续集</title>
    <link href="https://alt-f4.blog/zh/ALTF4-37/" />
    <id>https://alt-f4.blog/ALTF4-37</id>
    <updated>2021-05-28T00:00:00+00:00</updated>
    <content type="html">&lt;p&gt;在 Alt-F4 发行的第 37 周，我们推出了第 37 期！想不到吧！在这一期中，长期撰稿人 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;pocarski&lt;/code&gt; 又带来了更多简单易懂的内容，为您讲解如何通过一些运算器来调剂和优化你的基地！&lt;/p&gt; &lt;h2 id=&quot;运算器-2增强型物流-pocarski&quot;&gt;运算器 2：增强型物流 &lt;author&gt;pocarski&lt;/author&gt;&lt;/h2&gt; &lt;p&gt;几周前，我写了一篇关于使用运算器来改善特定建筑的&lt;a href=&quot;https://alt-f4.blog/zh/ALTF4-31/#%E8%BF%90%E7%AE%97%E5%99%A8%E4%BB%A5%E5%8F%8A%E4%B8%BA%E4%BB%80%E4%B9%88%E4%BD%A0%E6%97%A0%E9%9C%80%E7%95%8F%E6%83%A7%E5%AE%83%E4%BB%AC-pocarski&quot;&gt;文章&lt;/a&gt;。这一次，我们将看看如何更普遍地应用信号网络，来提高你整个工厂的效率。我们将研究传统设计的缺陷，提出解决这些问题的方法，使用信号网络实现这些解决方案。此种改进可以在机器人和列车上进行，而且电路是如此简单几乎不需要判断运算器。让我们直接开始吧！&lt;/p&gt; &lt;h3 id=&quot;机器人网络对网络接口&quot;&gt;机器人：网络对网络接口&lt;/h3&gt; &lt;p&gt;我们都遇到过这样的问题：你创造了更多的机器人需求，突然间，所有来自你基地远端的机器人都决定要在没有机器人指令平台的地区行驶数千格。在最好的情况下，这将导致类似于现实生活中的送货服务的轻微挫折感，在最坏的情况下，机器人将不断被虫群摧毁，或在中途掉头，在他们刚刚离开的机器人指令平台充电，让你失去吞吐量。这种情况发生在你的物流网络是一个非凸多边形，有一个巨大的物流匮乏区，导致愚蠢的直线寻路机器人进入其中。&lt;/p&gt; &lt;p&gt;&lt;/p&gt; &lt;p&gt;&lt;!-- Spacing --&gt;&lt;/p&gt; &lt;div class=&quot;image&quot;&gt; &lt;figure&gt; &lt;img src=&quot;https://media.alt-f4.blog/ALTF4/37/corner-cutting.jpg&quot; alt=&quot;一个网络中大部分的机器人被卡在电池续航能力的边境中&quot; style=&quot;max-width: ; max-height: &quot; /&gt; &lt;figcaption&gt;这个基地的机器人没有足够的电量来越过凹地，所以它们在中途一直在掉头。&lt;/figcaption&gt; &lt;/figure&gt; &lt;/div&gt; &lt;p&gt;&lt;/p&gt; &lt;p&gt;&lt;!-- Spacing --&gt;&lt;/p&gt; &lt;p&gt;因此，有一条戒律来避免这种情况：&lt;em&gt;“不可修建凹陷的物流网络”&lt;/em&gt;。听起来很简单，对吗？只要让你的基地成为一个由机器人指令平台组成的巨大矩形，就不存在任何可以拐弯抹角的地方。这是一个有效的解决方案，但它给你的扩张带来了非常大的限制，因为你将被迫扩大矩形来覆盖你所有新获得的地产。这将导致你实际的基地只占据你的物流网络覆盖区域一小部分的情况。&lt;/p&gt; &lt;p&gt;&lt;/p&gt; &lt;p&gt;&lt;!-- Spacing --&gt;&lt;/p&gt; &lt;div class=&quot;image&quot;&gt; &lt;figure&gt;...</content>
  </entry>
  
  
  
  <entry>
    <title>Alt-F4 #36 - Nauvis 有约：Bentham 和 Xisumavoid <author>Bobby</title>
    <link href="https://alt-f4.blog/zh/ALTF4-36/" />
    <id>https://alt-f4.blog/ALTF4-36</id>
    <updated>2021-05-21T00:00:00+00:00</updated>
    <content type="html">&lt;p&gt;本周带来了第二期 &lt;em&gt;Nauvis 有约&lt;/em&gt;，涉及到与异星工厂名人谈论生命、宇宙及一切。这一次，&lt;em&gt;Bobby&lt;/em&gt; 与 Bentham 又名 MangledPorkGaming 聊了聊异星工厂最初的几年。&lt;/p&gt; &lt;h2 id=&quot;nauvis-有约bentham-和-xisumavoid-bobby&quot;&gt;Nauvis 有约：Bentham 和 Xisumavoid &lt;author&gt;Bobby&lt;/author&gt;&lt;/h2&gt; &lt;h3 id=&quot;mangledporkgaming又名-bentham&quot;&gt;MangledPorkGaming，又名 Bentham&lt;/h3&gt; &lt;p&gt;和许多其他人一样，我第一次接触异星工厂是在 YouTube 上看别人玩这个游戏。我是在 2014 年 6 月，也就是 0.10 版更新时开始接触的。在那个时期，我关注的异星工厂内容创作者有 &lt;a href=&quot;https://www.youtube.com/user/arumba07&quot;&gt;Arumba&lt;/a&gt;，&lt;a href=&quot;https://www.youtube.com/user/RotNSteejo&quot;&gt;Steejo&lt;/a&gt;，&lt;a href=&quot;https://www.youtube.com/user/Aavak&quot;&gt;Aavak&lt;/a&gt;，……以及 [MangledPorkGaming] (https://www.youtube.com/c/MangledPork/featured)。但为什么要用 MangledPork 这个拗口的名字？在我们的采访中，&lt;a href=&quot;https://media.alt-f4.blog/ALTF4/36/Bent-Ham.mp3&quot;&gt;他说&lt;/a&gt;起初想用自己的名字 Bentham，但这是英国的一个小镇、一些名人等都在使用的普通名字。所以，他把这个名字从中间拆开，变成“Bent Ham”（弯曲 火腿），&lt;em&gt;显然&lt;/em&gt;这变成了他现在的名字 Mangled Pork（折碎的 猪肉）。&lt;/p&gt; &lt;div class=&quot;m0 h100 quote&quot;&gt; &lt;blockquote cite=&quot;&quot;&gt; &lt;div class=&quot;panel-inset-lighter &quot;&gt;...</content>
  </entry>
  
  
  
  <entry>
    <title>Alt-F4 #35 - 好兄弟你有去过健身房么？</title>
    <link href="https://alt-f4.blog/zh/ALTF4-35/" />
    <id>https://alt-f4.blog/ALTF4-35</id>
    <updated>2021-05-14T00:00:00+00:00</updated>
    <content type="html">&lt;p&gt;作为 5 月中旬的流行趋势，请让 Alt-F4 第 35 期在这里为您养眼。本期，&lt;em&gt;Romner&lt;/em&gt; 对为什么异星工厂的工程师比我的世界的史蒂夫更牛进行了科学探索。结束这场感官盛宴的则是 &lt;em&gt;Conor_&lt;/em&gt; 给我们介绍了 &lt;em&gt;stringweasel&lt;/em&gt; 的 &lt;em&gt;名人堂（Hall of Fame）&lt;/em&gt; Mod，作者&lt;em&gt;绝对&lt;/em&gt;不可能是 &lt;em&gt;nepotism&lt;/em&gt;。&lt;/p&gt; &lt;h2 id=&quot;工程师那挑战物理学的力量-romner&quot;&gt;工程师那挑战物理学的力量 &lt;author&gt;Romner&lt;/author&gt;&lt;/h2&gt; &lt;p&gt;我的世界里的史蒂夫很强壮。&lt;a href=&quot;https://www.reddit.com/r/Minecraft/comments/jmz6lz/actualized_maximum_weight_that_steve_can_hold/&quot;&gt;能够轻易举起数十亿千克的强壮&lt;/a&gt;。但他远不能与异星工厂的工程师 &lt;em&gt;相提并论&lt;/em&gt;。&lt;/p&gt; &lt;p&gt;假设没用任何 Mod，穿着一套能量装甲 MK2 的工程师有 120 个背包格，加上 30 个物流垃圾格，总共有 150 个可用的格子。据我所知，游戏中每个格子最重的物品是核反应堆。每个格子可以容纳 10 个反应堆，因此我们总共有 1500 个反应堆。根据&lt;a href=&quot;https://www.nextbigfuture.com/2007/07/constructing-lot-of-nuclear-power.html&quot;&gt;这篇文章&lt;/a&gt;，现代核反应堆每兆瓦使用 40 公吨的钢和 190m³ 的混凝土。异星工厂中的核反应堆可以生产 40 MW。每个！哦，还有毗邻加成，我们可以用一个等式来说明（假设有四个或更多的反应堆和 2xN 反应堆布局），其中 $n$ 是反应堆的数量，$P$ 是反应堆的基本功率输出：&lt;/p&gt; &lt;p&gt;$(n...</content>
  </entry>
  
  
  
  <entry>
    <title>Alt-F4 #34 - 我们是如何走到今天的？</title>
    <link href="https://alt-f4.blog/zh/ALTF4-34/" />
    <id>https://alt-f4.blog/ALTF4-34</id>
    <updated>2021-05-07T00:00:00+00:00</updated>
    <content type="html">&lt;p&gt;本周的第 34 期，&lt;em&gt;Nanogamer7&lt;/em&gt; 开始了一个关于异星工厂潜在起源的全新系列文章。本周的内容是深入研究这一游戏杰作的灵感来源，并在聊聊游戏设计。请留步，听我说个故事！&lt;/p&gt; &lt;h2 id=&quot;同类游戏中的佼佼者异星工厂起源-nanogamer7&quot;&gt;同类游戏中的佼佼者——异星工厂起源 &lt;author&gt;Nanogamer7&lt;/author&gt;&lt;/h2&gt; &lt;p&gt;我们都听闻异星工厂在 &lt;a href=&quot;https://steamdb.info/stats/gameratings/&quot;&gt;Steam 评分&lt;/a&gt;上的优异成绩，长期处于仅次于传送门 2 之后的第二名。显然有许多人会试图在自动化这种游戏类型中模仿其成功之处，但异星工厂本身的灵感来自哪里？它是第一个完全为自动化而设计的游戏么？还说仅仅是第一个成功做出来的游戏？这将是我在这个（可能的）系列文章的第一篇中试图回答的问题。&lt;/p&gt; &lt;h3 id=&quot;自动化的定义&quot;&gt;自动化的定义&lt;/h3&gt; &lt;p&gt;我们需要要回答的第一个难题将是到底什么是自动化。以“城市：天际线”为例，你建造你的城市，然后这个城市（理论上）将会自主运行。这里的区别是，你的工作——并非让汽车无中生有，选择目的地，通过你建造的道路自己到达那里——而是管理全局，这一点没有自动化。另一方面，在原版的我的世界中，你却可能实现自动化工作——只不过是用活塞和漏斗，而不是机械臂和传送带。通过比较这两个例子，我们可以宽泛地将自动化类定义为&lt;em&gt;“制作用于制作物品的物品”&lt;/em&gt;。&lt;/p&gt; &lt;p&gt;&lt;/p&gt; &lt;p&gt;&lt;!-- Spacing --&gt;&lt;/p&gt; &lt;div class=&quot;image&quot;&gt; &lt;figure&gt; &lt;img src=&quot;https://media.alt-f4.blog/ALTF4/34/minecraft-hopper.jpg&quot; alt=&quot;原版我的世界中的一个简单的冶炼设置&quot; style=&quot;max-width: ; max-height: &quot; /&gt; &lt;figcaption&gt;漏斗，我的世界中的“传送带”。在图示中，它为熔炉提供煤炭（侧面）和物品（顶部），同时将熔炼产出的资源拉到下面的箱子中。&lt;/figcaption&gt; &lt;/figure&gt; &lt;/div&gt; &lt;p&gt;&lt;/p&gt; &lt;p&gt;&lt;!-- Spacing --&gt;&lt;/p&gt; &lt;p&gt;然而，这个定义还是有点模糊的。作为一个没有玩过这个游戏的人，矮人堡垒中让矮人&lt;em&gt;制造东西&lt;/em&gt;的玩法是否满足我对自动化的定义？为了本文的目的，我们假设它是。不管我们谈论的是电子电路、小麦和种子，还是木制刺钉，都算。也许将来会有其他人来进一步研究矮人堡垒&lt;em&gt;*眨眨眼*&lt;/em&gt;。&lt;/p&gt; &lt;h3 id=&quot;可以用一个-mod-来实现&quot;&gt;可以用一个 Mod 来实现&lt;/h3&gt; &lt;p&gt;我已经提到了我的世界作为自动化的一个例子，但其原版的内容根本不能与 Mod 相提并论。在 2013 年的大热之后许多技术型玩家齐聚一堂，形成了有史以来最大的 Mod 社区之一，这可能使它成为最流行的自动化样例。但这引起了我的思考，诸如建筑（BuildCraft）、工业时代（IndustrialCraft）和红石力量（Redpower）等游戏...</content>
  </entry>
  
  
  
  <entry>
    <title>Alt-F4 #33 - 原版：摇匀，不要搅拌</title>
    <link href="https://alt-f4.blog/zh/ALTF4-33/" />
    <id>https://alt-f4.blog/ALTF4-33</id>
    <updated>2021-04-30T00:00:00+00:00</updated>
    <content type="html">&lt;p&gt;在令人愉快的 Alt-F4 第 33 期中，&lt;em&gt;Villfuk02&lt;/em&gt; 介绍了他们的最新 Mod 创作。配方随机器！聚焦在需要克服的设计问题上，以制作一个真正好用的配方随机器。之后，&lt;em&gt;redlabel&lt;/em&gt; 宣布了最新的 COMFY 活动，这很可能是一个非常 &lt;em&gt;炸裂&lt;/em&gt; 的活动。&lt;/p&gt; &lt;h2 id=&quot;原版摇匀不要搅拌-villfuk02&quot;&gt;原版：摇匀，不要搅拌 &lt;author&gt;Villfuk02&lt;/author&gt;&lt;/h2&gt; &lt;p&gt;&lt;a href=&quot;https://mods.factorio.com/mod/ZRecipeRandomizer&quot;&gt;&lt;em&gt;Vill 的配方随机器（Vill’s Recipe Randomizer）&lt;/em&gt;&lt;/a&gt;的功能正如其名——它将配方随机化。乍一看，这感觉是一个非常愚蠢而且非常简单的主意。然而，一旦你试图让它变得不那么愚蠢，它很快就会变得非常复杂。&lt;/p&gt; &lt;p&gt;&lt;/p&gt; &lt;p&gt;&lt;!-- Spacing --&gt;&lt;/p&gt; &lt;div class=&quot;image&quot;&gt; &lt;figure&gt; &lt;img src=&quot;https://media.alt-f4.blog/ALTF4/33/spaghetti-sample.jpg&quot; alt=&quot;免费的意大利面样品&quot; style=&quot;max-width: ; max-height: &quot; /&gt; &lt;figcaption&gt;一个用掩护无人机，电闸和油料储罐制造生产科技包的工厂样例。&lt;/figcaption&gt; &lt;/figure&gt; &lt;/div&gt; &lt;p&gt;&lt;/p&gt; &lt;p&gt;&lt;!-- Spacing --&gt;&lt;/p&gt; &lt;h3 id=&quot;从哪里开始的&quot;&gt;从哪里开始的&lt;/h3&gt; &lt;p&gt;我是在 2020 年 9 月开始这个项目的。当时，我试图做一个既简单又独特的...</content>
  </entry>
  
  
  
  <entry>
    <title>Alt-F4 #32 - 操作 Wireshark</title>
    <link href="https://alt-f4.blog/zh/ALTF4-32/" />
    <id>https://alt-f4.blog/ALTF4-32</id>
    <updated>2021-04-23T00:00:00+00:00</updated>
    <content type="html">&lt;p&gt;欢迎来到鲨鱼游弋的第 2⁵ 期 Alt-F4。在这个危险水域中，&lt;em&gt;The-Kool&lt;/em&gt; 在最新一集的复杂角中指导我们用好扬声器，比如用作鲨鱼警告系统！然后，&lt;em&gt;Hornwitser&lt;/em&gt; 用 Wireshark 进行了一些真正的捕鲨活动，讲述了他如何追踪游戏中遇到的网络问题的故事。拿起鱼叉，跳下水吧！&lt;/p&gt; &lt;h2 id=&quot;复杂角扬声器-the-kool&quot;&gt;复杂角：扬声器 &lt;author&gt;The Kool&lt;/author&gt;&lt;/h2&gt; &lt;p&gt;欢迎回到复杂角，在这里我们将对游戏中较少使用或较复杂的机制进行梳理，为不熟悉这些机制的人做个介绍。在这篇文章中，我们将提出三个问题：“它是什么？”，“它能提供什么效果？”，“它应该用在哪里？”。&lt;/p&gt; &lt;h3 id=&quot;它是什么&quot;&gt;它是什么？&lt;/h3&gt; &lt;p&gt;&lt;a href=&quot;https://wiki.factorio.com/Programmable_speaker/zh&quot;&gt;程控扬声器&lt;/a&gt;是个只占一格“建筑”。当连接到一个电路时，它可以根据该电路上的信号发出你将在游戏中听到的声音。你可以调整音量，为它选择一个特定的声音，告诉它无论你在多远的地方都能听到，甚至在地图上显示一个自定义警报。扬声器是通过电路技术解锁的，这在科技树中是如此之早甚至可能是你的第一个绿色科技。&lt;/p&gt; &lt;p&gt;&lt;/p&gt; &lt;p&gt;&lt;!-- Spacing --&gt;&lt;/p&gt; &lt;div class=&quot;image&quot;&gt; &lt;figure&gt; &lt;img src=&quot;https://media.alt-f4.blog/ALTF4/32/speaker.jpg&quot; alt=&quot;程控扬声器&quot; style=&quot;max-width: ; max-height: &quot; /&gt; &lt;figcaption&gt;它矗立与此，沐浴在荣光之中。来源：&lt;a href=&quot;https://wiki.factorio.com/File:Programmable_speaker_entity.png&quot;&gt;异星工厂 Wiki&lt;/a&gt;。&lt;/figcaption&gt; &lt;/figure&gt; &lt;/div&gt; &lt;p&gt;&lt;/p&gt; &lt;p&gt;&lt;!-- Spacing --&gt;&lt;/p&gt; &lt;h3 id=&quot;它能提供什么效果&quot;&gt;它能提供什么效果？&lt;/h3&gt; &lt;p&gt;它能响！好吧，这句话有点废话。虽然扬声器因为用它们建造的&lt;a href=&quot;https://miditorio.com/&quot;&gt;乐器&lt;/a&gt;而闻名，但也有着一些实际用途。如果你把扬声器连接到你的工厂，并设置全局播放和警报图标，你就可以为任何事情设计自定义警报。你可以（而且应该！）给它一个自定义的图标和名字，因为你绝对会忘记这个响亮的警报器是用来干什么的。这是一个在整个工厂广播警报的简单方法，能够帮助你在小麻烦变成真正的大问题之前抓住警告信号。&lt;/p&gt; &lt;h3 id=&quot;它应该用在哪里&quot;&gt;它应该用在哪里？&lt;/h3&gt; &lt;p&gt;你是否曾经历过意外的电力不足，使你的煤矿采矿机放慢速度，导致你的锅炉燃料不足，最终进入停电的螺旋？试着在通往锅炉的运煤传送带旁放一个扬声器，用一根线缆将它与运煤带连接起来。一格完整的传送带可容纳 8 件物品，所以如果你将扬声器设置为在少于...</content>
  </entry>
  
  
  
  <entry>
    <title>Alt-F4 #31 - 运算器速成班</title>
    <link href="https://alt-f4.blog/zh/ALTF4-31/" />
    <id>https://alt-f4.blog/ALTF4-31</id>
    <updated>2021-04-16T00:00:00+00:00</updated>
    <content type="html">&lt;p&gt;经过一周的短休，Alt-F4 带着第 31 期又回来了。本期中，&lt;em&gt;pocarski&lt;/em&gt; 又谈到了更多在异星工厂中构建计算机逻辑的方法，这次的主题是运算器，你能发现它的使用比你想象的要简单得多。之后，&lt;em&gt;Big Community Games&lt;/em&gt; 宣布了他们下一个激动人心的活动，这次将围绕着工业革命而展开。&lt;/p&gt; &lt;h2 id=&quot;运算器以及为什么你无需畏惧它们-pocarski&quot;&gt;运算器以及为什么你无需畏惧它们 &lt;author&gt;pocarski&lt;/author&gt;&lt;/h2&gt; &lt;p&gt;在科技树中，有很多技术并不是完成游戏所必需的，因此经常被排挤。有些是可以理解的，例如和平模式下的军事科技。而另一些尽管能够提供非凡的改进但也不被考虑。信号网络就是这样一种技术，这将是我在本文中探讨的内容。&lt;/p&gt; &lt;p&gt;信号网络主要有四部分组成：线缆、常量运算器、判断运算器和算术运算器。&lt;/p&gt; &lt;p&gt;&lt;/p&gt; &lt;p&gt;&lt;!-- Spacing --&gt;&lt;/p&gt; &lt;div class=&quot;image&quot;&gt; &lt;img src=&quot;https://media.alt-f4.blog/ALTF4/31/combinators.jpg&quot; alt=&quot;用线缆连接的 3 种运算器&quot; style=&quot;max-width: ; max-height: &quot; /&gt; &lt;/div&gt; &lt;p&gt;&lt;/p&gt; &lt;p&gt;&lt;!-- Spacing --&gt;&lt;/p&gt; &lt;p&gt;常量运算器持续输出你设定的任何信号（也无需供电）；判断运算器在满足某个逻辑条件时输出一些信号；算术运算器进行数学运算。线缆的作用就像一种“信号云”，所有输出到线缆上的信号都可以被连接到线缆上的所有东西读取。红线和绿线的功能相同，但可以连接到同一个设备上，而不会相互干扰。&lt;/p&gt; &lt;h3 id=&quot;基本元素&quot;&gt;基本元素&lt;/h3&gt; &lt;p&gt;我们来看看三个非常简单且有着广泛应用的单运算器模块。这些模块分别是：脉冲发生器、RS 锁存器和计数器。我们先从脉冲发生器说起，它长这个样子：&lt;/p&gt; &lt;p&gt;&lt;/p&gt; &lt;p&gt;&lt;!-- Spacing --&gt;&lt;/p&gt; &lt;div class=&quot;image&quot;&gt; &lt;img src=&quot;https://media.alt-f4.blog/ALTF4/31/monostable.jpg&quot; alt=&quot;用算术运算器制作的脉冲发生器&quot; style=&quot;max-width: ;...</content>
  </entry>
  
  
  
  <entry>
    <title>Alt-F4 #30 - Nauvis 有约：Zisteau</title>
    <link href="https://alt-f4.blog/zh/ALTF4-30/" />
    <id>https://alt-f4.blog/ALTF4-30</id>
    <updated>2021-04-02T00:00:00+00:00</updated>
    <content type="html">&lt;p&gt;跨入了以 3 开头的数字领域，在第 30 期中 stringweasel 给 Alt-F4 带来了一点新的形式：采访，算是一个采访。他和 YouTube 上的名人 Zisteau 聊了聊他对我们这个游戏中各种话题的看法。&lt;/p&gt; &lt;h3 id=&quot;nauvis-有约zisteau-stringweasel&quot;&gt;Nauvis 有约：Zisteau &lt;author&gt;stringweasel&lt;/author&gt;&lt;/h3&gt; &lt;p&gt;谈到异星工厂，我们会想到很多知名人士。多年来，这些伟大的玩家创造了令人惊叹的内容和造物，并向更多人介绍了我们热爱的这款游戏。纪念这些玩家的一个好方法，也作为让我能与这些玩家交谈的借口，就是采访。因此，我们开始了一个新的系列文章（希望如此！）——Nauvis 有约。首先，我想谈谈一个长期帮助异星工厂及其社区的名字，名叫 &lt;a href=&quot;https://www.youtube.com/user/Zisteau&quot;&gt;Zisteau&lt;/a&gt; 的 YouTuber。我联系了他，询问能否问他几个问题，回答是“当然可以”。&lt;/p&gt; &lt;p&gt; &lt;figure&gt; &lt;video class=&quot;media&quot; width=&quot;100%&quot; height=&quot;100%&quot; style=&quot;max-width: 640px; max-height: &quot; playsinline=&quot;&quot; autoplay=&quot;&quot; muted=&quot;&quot; loop=&quot;&quot; controls=&quot;&quot;&gt; &lt;source src=&quot;https://media.alt-f4.blog/ALTF4/30/zisteau-picture.mp4&quot; type=&quot;video/mp4&quot; /&gt; &amp;lt;/source&amp;gt; &lt;!-- &lt;source src=&quot;movie.ogg&quot; type=&quot;video/webm&quot;&gt; --&gt; &lt;!-- &lt;source...</content>
  </entry>
  
  
</feed>