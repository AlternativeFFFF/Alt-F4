<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title>Alternative Friday Factorio Fan Facts</title>
  <link href="https://alt-f4.blog/zh/atom.xml" rel="self" />
  <id>https://alt-f4.blog</id>
  <updated>2021-04-16T09:21:42+00:00</updated>
  <author>
    <name>Therenas</name>
    <uri>https://alt-f4.blog/about</uri>
    <email>AlternativeFridayFacts@gmail.com</email>
  </author>
  
  
  <entry>
    <title>Alt-F4 #31 - 运算器速成班</title>
    <link href="https://alt-f4.blog/zh/ALTF4-31/" />
    <id>https://alt-f4.blog/ALTF4-31</id>
    <updated>2021-04-16T00:00:00+00:00</updated>
    <content type="html">&lt;p&gt;经过一周的短休，Alt-F4 带着第 31 期又回来了。本期中，&lt;em&gt;pocarski&lt;/em&gt; 又谈到了更多在异星工厂中构建计算机逻辑的方法，这次的主题是运算器，你能发现它的使用比你想象的要简单得多。之后，&lt;em&gt;Big Community Games&lt;/em&gt; 宣布了他们下一个激动人心的活动，这次将围绕着工业革命而展开。&lt;/p&gt; &lt;h2 id=&quot;运算器以及为什么你无需畏惧它们-pocarski&quot;&gt;运算器以及为什么你无需畏惧它们 &lt;author&gt;pocarski&lt;/author&gt;&lt;/h2&gt; &lt;p&gt;在科技树中，有很多技术并不是完成游戏所必需的，因此经常被排挤。有些是可以理解的，例如和平模式下的军事科技。而另一些尽管能够提供非凡的改进但也不被考虑。信号网络就是这样一种技术，这将是我在本文中探讨的内容。&lt;/p&gt; &lt;p&gt;信号网络主要有四部分组成：线缆、常量运算器、判断运算器和算术运算器。&lt;/p&gt; &lt;p&gt;&lt;/p&gt; &lt;p&gt;&lt;!-- Spacing --&gt;&lt;/p&gt; &lt;div class=&quot;image&quot;&gt; &lt;img src=&quot;https://media.alt-f4.blog/ALTF4/31/combinators.jpg&quot; alt=&quot;用线缆连接的 3 种运算器&quot; style=&quot;max-width: ; max-height: &quot; /&gt; &lt;/div&gt; &lt;p&gt;&lt;/p&gt; &lt;p&gt;&lt;!-- Spacing --&gt;&lt;/p&gt; &lt;p&gt;常量运算器持续输出你设定的任何信号（也无需供电）；判断运算器在满足某个逻辑条件时输出一些信号；算术运算器进行数学运算。线缆的作用就像一种“信号云”，所有输出到线缆上的信号都可以被连接到线缆上的所有东西读取。红线和绿线的功能相同，但可以连接到同一个设备上，而不会相互干扰。&lt;/p&gt; &lt;h3 id=&quot;基本元素&quot;&gt;基本元素&lt;/h3&gt; &lt;p&gt;我们来看看三个非常简单且有着广泛应用的单运算器模块。这些模块分别是：脉冲发生器、RS 锁存器和计数器。我们先从脉冲发生器说起，它长这个样子：&lt;/p&gt; &lt;p&gt;&lt;/p&gt; &lt;p&gt;&lt;!-- Spacing --&gt;&lt;/p&gt; &lt;div class=&quot;image&quot;&gt; &lt;img src=&quot;https://media.alt-f4.blog/ALTF4/31/monostable.jpg&quot; alt=&quot;用算术运算器制作的脉冲发生器&quot; style=&quot;max-width: ;...</content>
  </entry>
  
  
  
  <entry>
    <title>Alt-F4 #30 - Nauvis 有约：Zisteau</title>
    <link href="https://alt-f4.blog/zh/ALTF4-30/" />
    <id>https://alt-f4.blog/ALTF4-30</id>
    <updated>2021-04-02T00:00:00+00:00</updated>
    <content type="html">&lt;p&gt;跨入了以 3 开头的数字领域，在第 30 期中 stringweasel 给 Alt-F4 带来了一点新的形式：采访，算是一个采访。他和 YouTube 上的名人 Zisteau 聊了聊他对我们这个游戏中各种话题的看法。&lt;/p&gt; &lt;h3 id=&quot;nauvis-有约zisteau-stringweasel&quot;&gt;Nauvis 有约：Zisteau &lt;author&gt;stringweasel&lt;/author&gt;&lt;/h3&gt; &lt;p&gt;谈到异星工厂，我们会想到很多知名人士。多年来，这些伟大的玩家创造了令人惊叹的内容和造物，并向更多人介绍了我们热爱的这款游戏。纪念这些玩家的一个好方法，也作为让我能与这些玩家交谈的借口，就是采访。因此，我们开始了一个新的系列文章（希望如此！）——Nauvis 有约。首先，我想谈谈一个长期帮助异星工厂及其社区的名字，名叫 &lt;a href=&quot;https://www.youtube.com/user/Zisteau&quot;&gt;Zisteau&lt;/a&gt; 的 YouTuber。我联系了他，询问能否问他几个问题，回答是“当然可以”。&lt;/p&gt; &lt;p&gt; &lt;figure&gt; &lt;video class=&quot;media&quot; width=&quot;100%&quot; height=&quot;100%&quot; style=&quot;max-width: 640px; max-height: &quot; playsinline=&quot;&quot; autoplay=&quot;&quot; muted=&quot;&quot; loop=&quot;&quot; controls=&quot;&quot;&gt; &lt;source src=&quot;https://media.alt-f4.blog/ALTF4/30/zisteau-picture.mp4&quot; type=&quot;video/mp4&quot; /&gt; &amp;lt;/source&amp;gt; &lt;!-- &lt;source src=&quot;movie.ogg&quot; type=&quot;video/webm&quot;&gt; --&gt; &lt;!-- &lt;source...</content>
  </entry>
  
  
  
  
  
  <entry>
    <title>Alt-F4 #29 - 插件效果分享塔和无传送带</title>
    <link href="https://alt-f4.blog/zh/ALTF4-29/" />
    <id>https://alt-f4.blog/ALTF4-29</id>
    <updated>2021-03-26T00:00:00+00:00</updated>
    <content type="html">&lt;p&gt;本周第 29 期，我们又迎来了难得的双主题！首先，TheKool，继续谈论插件，通过插件效果分享塔和它们的作用来结束他的 &lt;em&gt;复杂角&lt;/em&gt; 传奇。然后，oof2win2 将用他们的 Mod &lt;em&gt;无传送带&lt;/em&gt;，为我们提供一个非常有趣的另类游戏视角。&lt;/p&gt; &lt;h2 id=&quot;复杂角插件效果分享塔-the-kool&quot;&gt;复杂角：插件效果分享塔 &lt;author&gt;The Kool&lt;/author&gt;&lt;/h2&gt; &lt;p&gt;欢迎回到“复杂角”！本周我将继续前三篇文章中讲到的插件的话题。这次我将介绍插件效果分享塔的概念，一个完全依靠插件而存在的建筑。和之前一样，我会对这个可能陌生的东西提出三个问题：“它是什么？”，“它能提供什么效果？”，“它应该用在哪里？”。我的目标是让还未曾用过的人能知道，它有多么易用。&lt;/p&gt; &lt;h3 id=&quot;插件效果分享塔是什么&quot;&gt;插件效果分享塔是什么？&lt;/h3&gt; &lt;p&gt;&lt;a href=&quot;https://wiki.factorio.com/Beacon/zh&quot;&gt;插件效果分享塔&lt;/a&gt;是一个可以放置插件的建筑，它可以将这些插件的效果扩散到附近的建筑。它占用的空间为 3x3 格，辐射范围为 9x9 格，也就是说它可以影响到三格之内的任何东西。它在常规游戏中比较晚出现，需要紫色的科研包来研究，但制作它所需的最高级原料是红色电路。一个插件效果分享塔有两个插件槽，会将槽位内的任何插件效果的一半传送给附近的建筑，同时持续消耗 480kW 的电力。&lt;/p&gt; &lt;h3 id=&quot;它们能提供什么效果&quot;&gt;它们能提供什么效果？&lt;/h3&gt; &lt;p&gt;大多数人都把插件效果分享塔看作是巨型基地的工具，这倒没错，它们对提高性能非常有效，或者说 UPS（&lt;strong&gt;U&lt;/strong&gt;pdates &lt;strong&gt;P&lt;/strong&gt;er &lt;strong&gt;S&lt;/strong&gt;econd，每秒更新数）。有了更快的机器，你只需更少的机器，更少的物品移动意味着你的计算机可以处理更大的工厂。不过，改进 UPS 远不是它们唯一的作用。&lt;/p&gt; &lt;p&gt;&lt;/p&gt; &lt;p&gt;&lt;!-- Spacing --&gt;&lt;/p&gt; &lt;div class=&quot;image&quot;&gt; &lt;img src=&quot;https://media.alt-f4.blog/ALTF4/29/beacons.jpg&quot; alt=&quot;围绕着组装机的插件效果分享塔，以及反之。&quot; style=&quot;max-width: ; max-height: &quot; /&gt; &lt;/div&gt; &lt;p&gt;&lt;/p&gt; &lt;p&gt;&lt;!-- Spacing --&gt;&lt;/p&gt;...</content>
  </entry>
  
  
  
  <entry>
    <title>Alt-F4 #28 - ROFL</title>
    <link href="https://alt-f4.blog/zh/ALTF4-28/" />
    <id>https://alt-f4.blog/ALTF4-28</id>
    <updated>2021-03-19T00:00:00+00:00</updated>
    <content type="html">&lt;p&gt;在三月的这个美好的一周，首次撰稿人 Ph.X 讲述了他们利用独立的模块来布置基地，并通过物流列车网络将它们连接起来的分隔系统。Ph.X 从软件开发中获得灵感和经验，将模块化编程的概念运用到异星工厂之中。&lt;/p&gt; &lt;p&gt;另外，还有个新闻，我们现在提供了一个可以订阅的电子邮件列表！如果你不经常浏览 Reddit 或论坛，甚至不经常来我们的 &lt;a href=&quot;https://discord.gg/nxnCFkb&quot;&gt;Discord&lt;/a&gt;，我们现在提供了一个同样受欢迎的电子邮件列表的选项。只要在&lt;a href=&quot;https://www.freelists.org/list/alt-f4&quot;&gt;这里&lt;/a&gt;输入你的电子邮件地址，你就会在每周五最新一期发布时收到通知。当然，我们只会将此用于 Alt-F4 的更新，而不会给你发送垃圾邮件。&lt;/p&gt; &lt;h2 id=&quot;面向配方的异星工厂之道-phx&quot;&gt;面向配方的异星工厂之道 &lt;author&gt;Ph.X&lt;/author&gt;&lt;/h2&gt; &lt;p&gt;异星工厂有一个复杂的生产线网络（即意大利面条），这使得游戏充满了乐趣和挑战。其作为一个复杂的工程问题存在着与软件工程类似的挑战，因此我认为可以用一些源自现实世界经验来改善游戏体验。&lt;/p&gt; &lt;h3 id=&quot;什么是rofl&quot;&gt;什么是“ROFL”&lt;/h3&gt; &lt;p&gt;有编程经验的人应该听说过 &lt;del&gt;&lt;a href=&quot;https://zh.wikipedia.org/wiki/%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1&quot;&gt;面向对象编程&lt;/a&gt;&lt;/del&gt; &lt;a href=&quot;https://zh.wikipedia.org/wiki/%E6%A8%A1%E5%9D%97%E5%8C%96%E7%BC%96%E7%A8%8B&quot;&gt;模块化编程&lt;/a&gt;，而这正是面向配方异星工厂之道（Recip-Oriented Factorio Life, ROFL）旨在模仿的理论。模块化编程，是强调将计算机程序的功能分离成独立的、可互换的“模块”的软件设计技术，它使得每个模块都包含着执行预期功能的一个唯一方面所必需的所有东西。在 ROFL 中，我们将整个工厂分离成独立的、可互换的“子工厂模块”，每个模块都包含了执行预期工厂的一个唯一配方必需的所有东西。&lt;/p&gt; &lt;p&gt;和大多数哲学一样，ROFL 试图找到一个永恒&lt;a href=&quot;https://zh.wikipedia.org/wiki/%E5%A7%8B%E5%9F%BA&quot;&gt;始基&lt;/a&gt;作为一切事物的来源；在我们这里，我们选择的始基是配方。集成电路可以由任何级别的组装机制作，它可能会受到不同插件的影响，所需的原材料可能来自传送带、物流箱，甚至是相邻的铜线组装机，但无论其他条件如何变化，配方本身一直是铜线、电路板与塑料合成集成电路。配方有点像异星工厂中的原子操作：一个不可分割的，无法进一步分解的，最小单位。&lt;/p&gt; &lt;p&gt;根据一个特定的配方，将专用于实现该配方的子工厂打包成模块。一个单独的物流系统作为模块对外交互的接口为其获取原料和供应产品。这样划分的目的是为了实现模块内部的高内聚和模块之间的低耦合。模块内部的高内聚指模块包含了制作配方所需的所有设施（组装机、机械臂、传送带、电线杆、插件效果分享塔等等），让模块可以独立工作。模块之间的低耦合性意味着模块之间通过预定义的接口（如电力和铁路网）进行交互，没有直接的依赖关系，使得模块之间可以互换。&lt;/p&gt; &lt;p&gt;为了更好地实现这个想法，下面的例子中使用了&lt;a href=&quot;https://mods.factorio.com/mods/Optera/LogisticTrainNetwork&quot;&gt;物流列车网络（LTN - Logistic Train Network）&lt;/a&gt;、&lt;a href=&quot;https://mods.factorio.com/mod/aai-containers&quot;&gt;AAI 箱子和仓库（AAI Containers &amp;amp; Warehouses）&lt;/a&gt;和&lt;a href=&quot;https://mods.factorio.com/mod/miniloader&quot;&gt;迷你装卸机（Miniloader）&lt;/a&gt;Mod。以下所有例子的蓝图都可在&lt;a href=&quot;https://media.alt-f4.blog/ALTF4/28/rofl_example_blueprint.txt&quot;&gt;这里&lt;/a&gt;下载。&lt;/p&gt; &lt;h3 id=&quot;接口设计&quot;&gt;接口设计&lt;/h3&gt; &lt;p&gt;在实际建造任何子工厂模块之前，我们需要设计一个通用的物流网络作为模块之间的接口。虽然总线或物流机器人在一定程度上可以实现这样的物流系统，但街区式铁路网格在吞吐量、可重复使用性和纯粹的 &lt;em&gt;炫酷程度&lt;/em&gt; 上都远超过其他方案。&lt;/p&gt;...</content>
  </entry>
  
  
  
  <entry>
    <title>Alt-F4 #27 - 设计不必要的东西</title>
    <link href="https://alt-f4.blog/zh/ALTF4-27/" />
    <id>https://alt-f4.blog/ALTF4-27</id>
    <updated>2021-03-12T00:00:00+00:00</updated>
    <content type="html">&lt;p&gt;本周，pocarski 继续他的传送带疯狂之旅，来看看通用平衡器。其结果是如此疯狂而又无用，你应该知道我们是在享受这个过程！&lt;/p&gt; &lt;h2 id=&quot;通用-8-8完美平衡万物皆宜-pocarski&quot;&gt;通用 8-8：完美平衡，万物皆宜 &lt;author&gt;pocarski&lt;/author&gt;&lt;/h2&gt; &lt;p&gt;&lt;a href=&quot;https://alt-f4.blog/zh/ALTF4-23/#%E7%BA%AF%E4%BC%A0%E9%80%81%E5%B8%A6%E8%AE%A1%E7%AE%97%E7%AC%AC%E4%B8%80%E9%83%A8%E5%88%86%E4%B8%8D%E5%A4%AA%E7%AE%80%E6%98%8E%E7%9A%84%E6%95%B0%E5%AD%A6-pocarski&quot;&gt;最近&lt;/a&gt;，我用传送带和分流器做了一堆电脑零件。本周我将继续我对移动物品的不健康的痴迷，制作一些至少能有点用处东西：平衡器。为什么我要写一整篇文章来设计一个平衡器呢？嗯，那是因为我们今天要做的这个平衡器可不一般！&lt;/p&gt; &lt;p&gt;这篇文章不会很深入地探讨平衡器的设计原理，因为我们将在大多数情况下使用预制且熟知的蓝图。然而，并非所有的平衡器皆生而平等，所以你需要了解一些术语：&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;strong&gt;输入平衡&lt;/strong&gt;：均匀地从所有输入中提取。在将多个输入合并为较少的输出时尤其重要。&lt;/li&gt; &lt;li&gt;&lt;strong&gt;输出平衡&lt;/strong&gt;：均匀分配给所有输出。当把几个输入分割成更多输出时尤其重要。&lt;/li&gt; &lt;li&gt;&lt;strong&gt;有限吞吐量&lt;/strong&gt;：存在内部瓶颈。一个有限吞吐量系统的例子是将两条传送带合并成一条，然后再将其分割成两条。这样的一个系统即使在输入和输出上都有两条传送带，但最大吞吐量只有一条传送带。&lt;/li&gt; &lt;li&gt;&lt;strong&gt;无限吞吐量&lt;/strong&gt;：与有限吞吐量相反，不存在内部瓶颈。如果 &lt;em&gt;能&lt;/em&gt; 通过 X 条传送带，它们就 &lt;em&gt;会&lt;/em&gt; 通过。&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;本文中的所有蓝图（还有一些额外的内容）都可以在&lt;a href=&quot;https://media.alt-f4.blog/ALTF4/27/8to8blueprint.txt&quot;&gt;这里&lt;/a&gt;下载。&lt;/p&gt; &lt;h3 id=&quot;前提&quot;&gt;前提&lt;/h3&gt; &lt;p&gt;想象一下下面的情景：你作为一个新手，刚刚听说了那些被称为“平衡器”的玩意儿以及它们的功能。你想把一条传送带平衡成三条。你本应该使用 1-3 的平衡器，但你还不知道这些，所以，你尝试使用 4-4 的平衡器，但只连接一个输入和三个输出。然而这么做得到的并非预期的 1:1:1 的输出比例，而是 1:1:2 的比例，令你大失所望。&lt;/p&gt; &lt;p&gt;&lt;/p&gt; &lt;p&gt;&lt;!-- Spacing --&gt;&lt;/p&gt; &lt;div class=&quot;image&quot;&gt; &lt;img src=&quot;https://media.alt-f4.blog/ALTF4/27/failed_1-3_compressed.jpg&quot; alt=&quot;如何错误的使用平衡器&quot; style=&quot;max-width: ; max-height: &quot; /&gt; &lt;/div&gt; &lt;p&gt;&lt;/p&gt;...</content>
  </entry>
  
  
  
  <entry>
    <title>Alt-F4 #26 - 给游戏添加多人</title>
    <link href="https://alt-f4.blog/zh/ALTF4-26/" />
    <id>https://alt-f4.blog/ALTF4-26</id>
    <updated>2021-03-05T00:00:00+00:00</updated>
    <content type="html">&lt;p&gt;在本周的第 26 期 Alt-F4 中（半周年！），of2win2 前往异星工厂多人游戏，并解释了它背后的一些技术机理。如果你曾想知道什么是 Desync，或者游戏是如何同时处理数百名玩家和数千个实体的，欢迎深入阅读！&lt;/p&gt; &lt;h2 id=&quot;异星工厂服务器-oof2win2&quot;&gt;异星工厂服务器 &lt;author&gt;oof2win2&lt;/author&gt;&lt;/h2&gt; &lt;p&gt;大多数玩家可能至少连接过一次异星工厂服务器，可能与朋友一起玩，或只是查看一些其他人的世界。在今天的 Alt-F4 中，我将简述多人游戏的历史，然后我会深入解释多人游戏在技术上 &lt;em&gt;如何&lt;/em&gt; 工作的。其中我将解释完全确定性算法和锁步算法的使用。&lt;/p&gt; &lt;h3 id=&quot;多人游戏发展史&quot;&gt;多人游戏发展史&lt;/h3&gt; &lt;p&gt;异星工厂在 2014 年 10 月的推出 0.11.0 版本中引入了多人游戏功能，该功能的开发是从&lt;a href=&quot;https://www.factorio.com/blog/post/fff-26&quot;&gt;异星工厂 0.9.4&lt;/a&gt; 开始的。这个多人游戏和你今天看到的不一样，你不能比如说通过 Steam 轻松的“加入好友”或者使用服务器浏览器——你需要知道服务器的确切 IP 地址。当多人游戏最初发布时，有不少 Bug，比如&lt;a href=&quot;https://forums.factorio.com/viewtopic.php?t=6285&quot;&gt;这个 Bug&lt;/a&gt; 不允许多人游戏持续超过 20 秒。当然，它被修复了，仅仅 3 个小时之后，经典的 Wube 式更新。还有&lt;a href=&quot;https://forums.factorio.com/viewtopic.php?t=6414&quot;&gt;这个 Bug&lt;/a&gt;，它不允许一次连接超过三个人——不像六年后的&lt;a href=&quot;https://www.factorio.com/blog/post/fff-332&quot;&gt;这个 500 多个玩家的多人游戏&lt;/a&gt;。多人游戏开发上投入的海量工作才让 500 名玩家能够同时连接。&lt;/p&gt; &lt;p&gt;作为一项主要功能，异星工厂从 0.12.0...</content>
  </entry>
  
  
  
  <entry>
    <title>Alt-F4 #25 - 效率，效率，效率！</title>
    <link href="https://alt-f4.blog/zh/ALTF4-25/" />
    <id>https://alt-f4.blog/ALTF4-25</id>
    <updated>2021-02-26T00:00:00+00:00</updated>
    <content type="html">&lt;p&gt;在这期 Alt-F4 的 25 期生日刊中，TheKool 将为大家带来他关于插件系列的第三期也是最后一期。在这期中，他通过谈论理论以及展示一个（几乎）真实世界实验来涵盖节能插件！&lt;/p&gt; &lt;h2 id=&quot;复杂角节能插件-the-kool&quot;&gt;复杂角：节能插件 &lt;author&gt;The Kool&lt;/author&gt;&lt;/h2&gt; &lt;p&gt;本周，我们将进入第三期的复杂角！如果你没看过先前的内容，建议先读一下我过去的文章，关于&lt;a href=&quot;https://alt-f4.blog/zh/ALTF4-12/#%E5%A4%8D%E6%9D%82%E8%A7%92%E4%BA%A7%E8%83%BD%E6%8F%92%E4%BB%B6-thekool&quot;&gt;产能&lt;/a&gt;和&lt;a href=&quot;https://alt-f4.blog/zh/ALTF4-16/#%E5%A4%8D%E6%9D%82%E8%A7%92%E9%80%9F%E5%BA%A6%E6%8F%92%E4%BB%B6-thekool&quot;&gt;速度&lt;/a&gt;插件的文章，因为今天我们将继续这个系列，讲讲三个插件中的最后一个：&lt;a href=&quot;https://wiki.factorio.com/Module/zh#%E8%8A%82%E8%83%BD%E6%8F%92%E4%BB%B6&quot;&gt;节能插件&lt;/a&gt;。和往期文章一样，我们将关注三个问题：“它是什么？”，“它能提供什么效果？”，“它应该用在哪里？”我们的目标是要告诉那些对使用这些机制犹豫不决的人，它们其实是超级容易上手的。&lt;/p&gt; &lt;h3 id=&quot;节能插件是什么&quot;&gt;节能插件是什么？&lt;/h3&gt; &lt;p&gt;与其他两个插件一样，节能插件可以放置在建筑物中以改变它们运行的方式。和速度插件一样，节能插件也可以放置在机器和插件效果分享塔中。不过与速度插件和产能插件不同，节能插件只有一个效果，没有直接的缺点和副作用。嗯，其实就是一个效果，有两个好处。它们降低了建筑运行所需的电力，也减少了其产生的污染。&lt;/p&gt; &lt;h3 id=&quot;它们能提供什么效果&quot;&gt;它们能提供什么效果？&lt;/h3&gt; &lt;p&gt;它们可以降低已经压榨到极限的电网压力，或者通过无需制造大量发电设施来节省资源，但最主要的好处是减少污染。相当 &lt;em&gt;大&lt;/em&gt; 程度的污染减少。一个节能插件 1 就能减少高达 30% 的功耗和污染！这也是一个非常惊人的数字。不过有一点很重要，那就是每台机器最多只能受益于 80% 的减排量，所以你在使用的时候要记住这一点。&lt;/p&gt; &lt;p&gt;很多理论工作者喜欢假设整个工厂使用清洁能源。也就是说，所有的电力都来自于太阳能，而太阳能没有污染。但对于我们很多人来说，在游玩的过程中大部分时间都是依靠蒸汽或核能，而这两种能源都会产生污染（尽管核能是通过制作燃料棒间接产生污染）。事实上，我们很多人从来没有试过纯太阳能。这意味着降低电力消耗就能减少发电带来的污染。&lt;/p&gt; &lt;p&gt;即便你真的全部用太阳能发电，节能插件也会减少机器本身产生的污染。对于那些不知道的人来说，有些机器本身就会&lt;a href=&quot;https://wiki.factorio.com/Pollution/zh#%E6%B1%A1%E6%9F%93%E6%BA%90&quot;&gt;产生污染&lt;/a&gt;，不管它们消耗的电力来自哪里。但是，这个污染率也会受到用电倍率的影响。这意味着，如果你的机器因为节能插件而少用了 60% 的电，那么它产生的直接污染也就少了 60%。例如，一台组装机 2 型如果有两个节能插件 1，每分钟只会产生 1.2 的污染，低于正常的每分钟 3。&lt;/p&gt; &lt;p&gt;为了展示节能插件对污染云的影响，我用编辑器设计并建造了一个工厂，它的规模大概相当于一个普通玩家的前火箭工厂，甚至可能更小一些。它的产量为 45 SPM，电力全部来自固体燃料和蒸汽，使用的是中级机器（钢炉、电力采矿机、组装机 2 型）。我把这个完整的工厂放在一个没有污染的地图上，让它运行了十个小时，然后拍下污染云的截图。接下来，我重新加载了没有污染的地图，又把基地放了下来，这次在运行十个小时之前添加了节能插件。大家可以自己看看污染云小了多少。&lt;/p&gt; &lt;p&gt; &lt;figure&gt; &lt;div class=&quot;juxtapose juxtapose-0&quot;...</content>
  </entry>
  
  
  
  <entry>
    <title>Alt-F4 #24 - 创造记忆</title>
    <link href="https://alt-f4.blog/zh/ALTF4-24/" />
    <id>https://alt-f4.blog/ALTF4-24</id>
    <updated>2021-02-19T00:00:00+00:00</updated>
    <content type="html">&lt;p&gt;本周，我们会跟进 pocarski 上周的文章，内容是关于如何在异星工厂内只用传送带来搭建一台电脑。这一次，我们要教它如何记住东西。让我们看看效果如何。&lt;/p&gt; &lt;h2 id=&quot;纯传送带计算第二部分永不忘记-pocarski&quot;&gt;纯传送带计算，第二部分：永不忘记 &lt;author&gt;pocarski&lt;/author&gt;&lt;/h2&gt; &lt;p&gt;本周，我将继续延续我的关于纯传送带计算的文章。我强烈建议大家回到&lt;a href=&quot;https://alt-f4.blog/zh/ALTF4-23/#%E7%BA%AF%E4%BC%A0%E9%80%81%E5%B8%A6%E8%AE%A1%E7%AE%97%E7%AC%AC%E4%B8%80%E9%83%A8%E5%88%86%E4%B8%8D%E5%A4%AA%E7%AE%80%E6%98%8E%E7%9A%84%E6%95%B0%E5%AD%A6-pocarski&quot;&gt;上期&lt;/a&gt;去复习一下。&lt;/p&gt; &lt;p&gt;在开始之前，先做一个简短的说明：在本周的 &lt;a href=&quot;https://discord.gg/AsXAwyV&quot;&gt;Discord&lt;/a&gt; 里 &lt;em&gt;BlueCheetah#7844&lt;/em&gt; 对我的加法器回路进行了重大的布局改进，现在它略微长了一些，但仅有四格宽。以下是改进后的图片，做着与上周一样的计算。&lt;/p&gt; &lt;p&gt;&lt;/p&gt; &lt;p&gt;&lt;!-- Spacing --&gt;&lt;/p&gt; &lt;div class=&quot;image&quot;&gt; &lt;img src=&quot;https://media.alt-f4.blog/ALTF4/24/improved-8-bit-adder.jpg&quot; alt=&quot;更好的加法器&quot; style=&quot;max-width: ; max-height: &quot; /&gt; &lt;/div&gt; &lt;p&gt;&lt;/p&gt; &lt;p&gt;&lt;!-- Spacing --&gt;&lt;/p&gt; &lt;p&gt;看完了这个，我们就开始讲正事吧。上一次，我们探讨了只用传送带和分流器进行数字加法，本周我们将探讨在计算方面同样重要的东西：内存。能够给数字做加法的能力是很棒的，但如果没有办法存储指令或结果，一切都是徒劳。在 CPU 内部，加法的结果会被记住，然后经过一些操作，反馈回刚才做计算的加法器。这样一来，就可以实现几乎所有能够想象到的数学运算。&lt;/p&gt; &lt;p&gt;和上周一样，欢迎大家下载本文中的所有电路的&lt;a href=&quot;https://media.alt-f4.blog/ALTF4/24/belt-computer-blueprint-book-2.txt&quot;&gt;蓝图簿&lt;/a&gt;来亲身体验一下。&lt;/p&gt; &lt;h3 id=&quot;数据选择器&quot;&gt;数据选择器&lt;/h3&gt; &lt;p&gt;首先介绍一个新的电路：&lt;a href=&quot;https://zh.wikipedia.org/wiki/%E6%95%B0%E6%8D%AE%E9%80%89%E6%8B%A9%E5%99%A8&quot;&gt;数据选择器&lt;/a&gt;。数据选择器有两个数据输入 &lt;em&gt;A&lt;/em&gt; 和 &lt;em&gt;B&lt;/em&gt;，一个指针输入 &lt;em&gt;P&lt;/em&gt;，一个输出 &lt;em&gt;O&lt;/em&gt;。下面是这个多路复用器的真值表（“-”表示输入不影响输出）：&lt;/p&gt; &lt;table&gt; &lt;thead&gt; &lt;tr&gt;...</content>
  </entry>
  
  
  
  <entry>
    <title>Alt-F4 #23 - 传送带狂欢节</title>
    <link href="https://alt-f4.blog/zh/ALTF4-23/" />
    <id>https://alt-f4.blog/ALTF4-23</id>
    <updated>2021-02-12T00:00:00+00:00</updated>
    <content type="html">&lt;p&gt;在为之前两周的 FFF 让出热度而短暂休刊之后，我们又回来了，带来两篇关于传送带的文章。在第一篇文章中，Recon419A 探讨了一个有趣的概念，让传送带以即时化的方式送达物品。然后，pocarski 深入研究了如何利用传送带来构建图灵机，技术宅狂喜。建议读者先获取计算机科学相关学位。&lt;/p&gt; &lt;h2 id=&quot;物流传送带-recon419a&quot;&gt;物流传送带 &lt;author&gt;Recon419A&lt;/author&gt;&lt;/h2&gt; &lt;p&gt;在异星工厂中移动物品有三种主要方式：传送带、物流机器人和列车。传送带适用于单种或两种物品的输入输出，火车适用于大量的单种物品，物流机器人适用于复杂的制作任务。然而，有时候，你需要组合这些方法，这就是诸如回转寿司等技术可以发挥作用的地方。在本文中，我想谈谈另一种我称之为“物流传送带”的方法。和回转寿司一样，物流传送带有没有 Mod 都可以使用，它本身也并不是一个 Mod，而是一种利用传送带和非常简单的电路来控制什么资源去哪里的方法。就像原版的物流网络和某些基于火车的 Mod 例如 LTN，它们的目的是成为一种比基本的传送带更智能的资源运送方式。&lt;/p&gt; &lt;h3 id=&quot;物流传送带说明&quot;&gt;物流传送带说明&lt;/h3&gt; &lt;p&gt;物流传送带是一个有点复杂的概念，但当你看到一个实际例子后，理解起来就简单多了。在这个例子中，请注意几种物品是如何沿着同一条传送带发送的，每种物品只有在要求时才会被装上传送带。如果只需要铁和铜，那么就不会有钢铁被送来；同样，如果什么都不需要，那么传送带就会保持空的状态。&lt;/p&gt; &lt;p&gt; &lt;figure&gt; &lt;video class=&quot;media&quot; width=&quot;100%&quot; height=&quot;100%&quot; style=&quot;max-width: 1280px; max-height: 720px&quot; playsinline=&quot;&quot; muted=&quot;&quot; controls=&quot;&quot;&gt; &lt;source src=&quot;https://media.alt-f4.blog/ALTF4/23/logistics-belts-demo.mp4&quot; type=&quot;video/mp4&quot; /&gt; &amp;lt;/source&amp;gt; 物流传送带概念的视频演示。 &lt;/video&gt; &lt;figcaption&gt;使用电路条件、筛选分流器和装卸机的物流传送带演示。机械臂可以代替装卸机，但根据传送带速度可能需要增加二至三倍的数量。&lt;/figcaption&gt; &lt;/figure&gt; &lt;/p&gt; &lt;p&gt;在例子中可以看到，电路条件设置为当目的地的物料少于 100 时发送物料。在现实中，传送带的长度会影响到发送材料的数量，如果传送带很长，当一百个材料进入缓冲箱时，还有几百个材料位于传送带上。在不溢出接收箱的要求下，传送带在理论上 &lt;em&gt;有&lt;/em&gt; 长度限制，但在实际操作中，只要你使用的是钢制箱就不大可能碰到；在非常大的距离上，你肯定会用列车来代替。如果你想玩一玩这个物流带的设置，可以在&lt;a href=&quot;https://media.alt-f4.blog/ALTF4/23/logistics-belt-blueprint.txt&quot;&gt;这里&lt;/a&gt;下载蓝图字符串，不过请注意该蓝图使用了 &lt;a href=&quot;https://mods.factorio.com/mods/Optera/LoaderRedux&quot;&gt;Loader Redux&lt;/a&gt;...</content>
  </entry>
  
  
</feed>